Kategorie wybrane przez użtykownika (zaznaczone):
{"Name":"adam"} -->POST localhost:8949/api/UserApi/UserCategories
----------------------------------------------------------------------------------------------------------------------------
Dodawanie nowego użytkownika:																																EDIT: 23.12.2015 r.
{"Name":"atomek"} -->POST localhost:8949/api/UserApi/AddUser --> w takiej konfiguracju wysyłamy JSON jeśli użytkownik loguje
																							 sie przez Facebook'a
{"Name":"Rafał","Password":"Rafal","Email":"rafal@wp.pl"}	-->POST localhost:8949/api/UserApi/AddUser -->{ w takiej konfiguracji 
																				wysyłamy JSON jeśli użytkownik się rejestruje. Użytkownik musi podac 
																				adres Email, właśnie przez ten element w JSON to jest rozpoznawane 
																				jest, czy  użutkownik loguje się przez Facbooka, czy przez własne konto.
}																						

RESPONSE --> W odpowiedzi dostajemy obecnie Id i krótką, informację. Ważne byłoby dla mnie, żeby było zapamiętywane Id. Bo 
					 trzeba pomyślec jak ktoś się wyloguje??Dodatkowo trzeba bedzie dodać opcję usuwania konta. 
					 UWAGA!!! Ten JSON zawsze zwraca atrybut CorrextLogin, ale Ciebie to interesuje tylko w wypadku korzystania z 
								   funkcjonalności logowania.
----------------------------------------------------------------------------------------------------------------------------
Logowanie się użytkownika:
{"Name":"atomek", "Password":"aaaa","Facebook":0}-->POST localhost:8949/api/UserApi/LoginUser --> wysłanie tego JSONa powoduje sprawdzenie
																														czy użytkownik istnoieje w bazie i czy podał 
																														poprawne hasło. 																													
----------------------------------------------------------------------------------------------------------------------------
Usuwanie użytkownika:
{"Name":"atomek"} -->POST localhost:8949/api/UserApi/RemoveUser
----------------------------------------------------------------------------------------------------------------------------
Pobranie wszystkich kategorii:
-->GET localhost:8949/api/CategoryApi/GetAllCategories
----------------------------------------------------------------------------------------------------------------------------
Użytkownik wybiera kategorie, lub je edytuje (w sensie swoje kategorie)
{"user":"adam","Categories":["Koncerty","Spektakle"]} -->POST localhost:8949/api/CategoryApi/AddOrChangeUserCategories
----------------------------------------------------------------------------------------------------------------------------
Pobieranie wydarzeń 
{"UserName":"","Longtitude":12.23,"Latitude":62.11,"Categories":[]} -->POST 188.122.12.144:50000/api/EventApi/EventToAndroid

W UserName wpisujemy nazwę użtykownika (jego Facebookowe ID)
PEŁNY PRZYKŁAD
{"UserName":"janekKowalski11214","Longtitude":12.23,"Latitude":62.11,"Categories":["Spektakle","Koncerty"]}
Zwraca wszystkie informacje na temat wydarzeń (chyba nawet wiecej niż powinno).
Zmienna Takingpart przyjmuje wartości:
0-nie bierze udziału
1-bierze udział 
2-null (dla ludzi niezarejestrowanych)

!!!!!!!!!!!!!!!!!!!!!!!Długość i szerokość geograficzna może być maksymlanie z dokładnością do 8 mijesc po przecinku.!!!!!!!!!!!!!!!!!!!!!!

Funkcja w modelu zwróci wydarzenia na które użytkownik jest w stanie dojechać.

Aby funkcja zwróciła wszystkie wydarzenia należy wpisać jako wartość Długości i Szerokości wartośći : -1
----------------------------------------------------------------------------------------------------------------------------
Feedback:
{  "Rate": 3,  "EventId": 2,  "Description": "ujdzie",  "UserName": "847379558710144"  }
Rate - ocena od 1 do 5 (w przypadku <1 przyjmowany jest 1, w przypadku >5 przyjmowane jest 5) - pole wymagane
EventID - ID wydarzenia które ma  być ocenione lub -1 jeśli oceniamy APLIKACJĘ - pole wymagane
Description - Opis oceny - pole opcjonalne
UserName - Nazwa użytkownika, który ocenia aplikację - pole wymagane
UWAGA: w przypadku oceny wydarzenia wymagane jest aby użytkownik wcześniej dołączył do wydarzenia, które chce ocenić
-------------------------------------------------------------------------------------------------------------------------------------------------
Lista wydarzeń, przy których użytkownik kliknął dołącz:

W JSON dostajesz w odpowiedzi pole Events. JEst to lista ID wydarzeń. Ten JSON służy tylko i wyłacznie do tego, żeby przy wyświetlaniu listy wydarzeń
było widać w których użytkownik klknął już wcześniej dołacz (przy których wydarzeniach serduszko ma być zamoalowane)

{"Username":"847379558710144"} --> POST 188.122.12.144:50000/api/EventApi/UserEvent

Odpowiedź:
{
"Username": "847379558710144",
"Events":["2","8"],
"TakingPart": false,
"EventIdToTakingPart": 0
}

Wszystkie pola można olać poza Events (lista Id wydarzeń)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Dołączanie lub odłączanie z wydarzenia:

Aby dołaćzyć do wydarzenia trzeba wysłać JSONa, w którym w polu:
EventIdToTakingPart - bedzie podane ID wydarzenia
TakingPart - będzie ustawione na true
Username - bedzie wypoełnione nazwą użytkownika

Przykł dołączenia: 
{"Username":"847379558710144","TakingPart":true,"EventIdToTakingPart":4} --> POST localhost:8949/api/EventApi/UserTakingPart [użytkownik dołączył do wydarzenia od ID 4]
Przykład odłaczenia:
{"Username":"847379558710144","TakingPart":false,"EventIdToTakingPart":4} --> POST localhost:8949/api/EventApi/UserTakingPart [użytkownik odłaczył z wydarzenia od ID 4]
  
 W odpowiedzi uzyskujesz tylko krótka informację, czy wszystko przebiegło ok i czy użytkownik dołąćżył czy odłaczył
 
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


