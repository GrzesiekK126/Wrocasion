@{
    ViewBag.Title = "Kategorie";
}

<div id="result1">
    @model WroServer.Models.ListaKategoriiModel

    <h2>Kategorie</h2>

    <div id="infoMessage">

    </div>
    <div>
        <div class="inline">
            <div class="addkategorie">
                <div class="header">
                    Dodaj kategorię
                </div>
                <div class="content">
                    <form id="uploader" class="form-group">

                        <table class="table table-striped">
                            <tr>
                                <td>Wybierz zdjęcie</td>
                                <td>Nazwa kategorii</td>
                                <td></td>
                            </tr>
                            <tr>
                                <td><input type="file" id="img_url" class="btn btn-default btn-file"/></td>
                                <td><input type="text" id="nazwa-dodawanej" value="" class="form-control" /></td>
                                <td><input type="submit" value="Dodaj" id="dodaj-kategorie" class="btn btn-file"/></td>

                            </tr>
                        </table>
                        <input type="hidden" value="" />
                    </form>
                </div>
                
                
            </div>
        </div>
        <div class="inline">
            <div class="removekategorie">
                <div class="header1">
                    Usuń kategorię
                </div>
            </div>
        </div>
    </div>

    <table class="table table-striped" id="categoryTable">
        <thead>
        <tr></tr>
        <tr>
            <th>Zdjęcie</th>
            <th class="tableText" width="100%">Nazwa</th>
            <th>Id</th>
        </tr>
        </thead>
        <tbody>


            @foreach (var kategoria in Model.ListaKategorii)
            {
                <tr>
                    <td><img src="@kategoria.LinkDoObrazka" class="miniaturka" /></td>
                    <td width="100%" class="tableText">@kategoria.Nazwa</td>
                    <td>@kategoria.Id</td>
                    <td><input id="@kategoria.Id" type="button" class="removeButtonRedVisible" value="Usuń kategorię" /></td>
                </tr>
            }

        </tbody>
    </table>
</div>
<script>
    var licznik = 0;
    //wysuwanie i chowanie przycisków do usuwania kategorii posługuję sie głowniem oznaczeniami css
    $(document).ready(function () {
        $(".header1").click(function () {
            $(".removeButtonRedVisible").toggle(600);
            
        });
    });
    //////////////////////////////////////////////////////
    var linkUsun = "/api/CategoryApi/UsunKategorie";

    $(".removeButtonRedVisible").click(usunKategorie);


    function usunKategorie () {
        //usuwanie kaegorii, trzeba bedzie dodać jeszcze zabezpieczenia :) przekazuję sobie tylko IDiki
        var usunId = {};
        usunId.Id = this.id;
        swal({
            title: "Jesteś pewny?",
            text: "Czy na pewno chcesz usunąć kategorię?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Tak, usuń!",
            cancelButtonText: "Nie, nie usuwaj",
            closeOnConfirm: false,
            closeOnCancel: false
        },
        function (isConfirm) {
            if (isConfirm) {
                swal("Usunięto!", "Usunięto kategorię", "success");
                jQuery.ajax({
                    type: "POST",
                    url: linkUsun,
                    data: JSON.stringify(usunId),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: successFunc,
                    error: errorFunc
                });
                function successFunc(data, status) {
                    if (data != "") {

                        // $("#categoryTable").on('click', '.removeButtonRedVisible', function () {
                        $("#"+data).closest('tr').remove();
                        // });

                    }

                    else
                        swal("Niepowodzenie", "Nie udało się usunąć, ponieważ istnieją wydarzenia z tej kategorii", "error");
                }

                function errorFunc() {
                    swal("Problem", "Wystąpił problem z usuwaniem kategorii", "error");
                }
            }
            else { swal("Anulowano", "Ufff... Nie usunąłeś kategorii", "error"); }
        });


        

    }

    $(".header").click(function () {

        $header = $(this);
        //getting the next element
        $content = $header.next();
        //open up the content needed - toggle the slide- if visible, slide up, if not slidedown.
        $content.slideToggle(500, function () {
            //execute this after slideToggle is done
            //change text of header based on visibility of content div
            $header.text(function () {
                //change text based on condition
                return $content.is(":visible") ? "Dodaj kategorię" : "Dodaj kategorię";
            });
        });

    });

    var link = "/api/CategoryApi/DodajKategorie";@* "@Url.Action("DodajKategorie", "CategoryApi")";*@

    $(document).ready(function () {
        @*$("#dodaj-kategorie").click(ajaxDodajKategorie);*@
        ajaxDK2();
    });

    function ajaxDK2() {
        var uploadLink = "@Url.Action("Upload", "Wydarzenia")";

        document.getElementById('uploader').onsubmit = function () {
            var formdata = new FormData();
            var fileInput = document.getElementById('img_url');

            for (i = 0; i < fileInput.files.length; i++) {
                formdata.append(fileInput.files[i].name, fileInput.files[i]);
                formdata.append("nazwa_kategorii", $("#nazwa-dodawanej").val());
            }
            var xhr = new XMLHttpRequest();
            xhr.open('POST', uploadLink);
            xhr.send(formdata);
            console.log("Wyslano");
            xhr.onreadystatechange = function () {
                if(xhr.status == 200){
                    if (xhr.readyState == 4 ) {
                        if (xhr.responseText.slice(0, 6) == "\"ERROR") {
                            swal("Nie udało się :(",xhr.responseText.slice(6,xhr.responseText.length-1) , "error");
                        }
                        else {
                            $(".removeButtonRedVisible").hide();
                            var nowa = JSON.parse(xhr.responseText);
                            $('#categoryTable').append('<tr><td><img src="' + nowa.LinkDoObrazka + '" class="miniaturka" /></td><td width="100%" class="tableText">' + nowa.Nazwa + '</td><td>' + nowa.Id + '</td><td><input id="' + nowa.Id + '" type="button" class="removeButtonRedVisible" value="Usuń kategorię"/></td></tr>');
                            $("#" + nowa.Id).click(usunKategorie);
                            document.getElementById('nazwa-dodawanej').value = "";
                            swal({ title: "Dodano kategorię!", type: "success", text: "Dodano nową kategorię: " + nowa.Nazwa, showConfirmButton: true });
                        }
                    }
                    
                }
                else{
                    swal("Nie udało się :(", "Wystąpił błąd podczas dodawania kategorii" , "error");

                }
            }
            return false;
        } 
    }

    function ajaxDodajKategorie() {
        var kategoria = {};
        kategoria.Nazwa = $('#nazwa-dodawanej').val();
        kategoria.Obrazek = "";

        jQuery.ajax({
            type: "POST",
            url: link,
            data: JSON.stringify(kategoria),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: successFunc,
            error: errorFunc
        });


        function successFunc(data, status) {
            if (data !="Category is already exists") {
                $(".removeButtonRedVisible").hide();
                swal({ title: "Dodano kategorię!", type: "success", text: "Dodano nową kategorię: "+data.Nazwa, timer: 1000, showConfirmButton: false });
                $('#categoryTable').append('<tr><td><img src="' + data.LinkDoObrazka + '" class="miniaturka" /></td><td width="100%" class="tableText">' + data.Nazwa + '</td><td>' + data.Id + '</td><td><input id="' + data.Id + '" type="button" class="removeButtonRedVisible" value="Usuń kategorię"/></td></tr>');
                document.getElementById('nazwa-dodawanej').value = "";
                document.getElementById('img_url').value = "";
            }

            else
                swal("Nie udało się :(", "Nie udało się dodać kategorii, ponieważ kategoria o takiej nazwie już istnieje", "error");
        }

        function errorFunc() {
            swal("Nie udało się :(", "Wystąpił błąd podczas dodawania kategorii", "error");
        }
    }

    
</script>
